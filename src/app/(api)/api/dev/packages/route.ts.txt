import fs from "fs";
import path from "path";
import { readFileSync } from 'fs';

import latestVersion from "latest-version";
import latestVersion from "@badisi/latest-version";

import { env } from "~/data/env/env.mjs";

/**
 * todo: it is basic implementation
 * todo: and it need to be improved
 *
 * todo: use `@badisi/latest-version` or `latest-version`
 *
 * @see: https://github.com/badisi/latest-version
 * @see: https://github.com/sindresorhus/latest-version
 */

export async function PackagesChecks() {
  if (env.NODE_ENV === "production") return null;

  const packageJSONPath = path.join(process.cwd(), "package.json");
  const packageJSON = JSON.parse(fs.readFileSync(packageJSONPath, "utf-8"));
  const dependencies = Object.keys(packageJSON.dependencies);

  const promises = dependencies.map(async (pkg) => {
    const latest = await latestVersion(pkg);
    return {
      pkg,
      current: packageJSON.dependencies[pkg],
      latest,
    };
  });

  const updates = await Promise.all(promises);
  return updates;
}
