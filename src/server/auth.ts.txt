/**
 * @see https://authjs.dev/reference/adapter/drizzle
 * @see https://github.com/jherr/app-router-auth-using-next-auth
 * @see https://github.com/rexfordessilfie/next-auth-account-linking/tree/app-router
 */

import { NextRequest } from "next/server";
import { DrizzleAdapter } from "@auth/drizzle-adapter";
import { defaultLocale } from "~/i18n/locales";
import NextAuth, {
  getServerSession,
  NextAuthOptions,
  type AuthOptions,
} from "next-auth";
import DiscordProvider from "next-auth/providers/discord";
import EmailProvider from "next-auth/providers/email";
import GithubProvider from "next-auth/providers/github";
import GoogleProvider from "next-auth/providers/google";
import { type Provider } from "next-auth/providers/index";

import { createAccount, createUser, findAccount } from "~/server/user";
// import { sendVerificationRequest } from "~/server/request";
import { signInPagePath } from "~/server/utils";
import { db } from "~/data/db/client";
import { env } from "~/data/env/env.mjs";

/**
 * Configure authentication providers. To enable email, google, and github
 * authentication, you must provide the required environment variables in
 * your `.env` file and on your deploy provider. If the environment
 * variables are not configured, the provider will not be enabled.
 */
const providers = [
  /**
   * Auth Email Provider
   * @see https://next-auth.js.org/providers/email
   */
  env.EMAIL_FROM &&
    env.RESEND_API_KEY &&
    EmailProvider({
      from: env.EMAIL_FROM,
      sendVerificationRequest,
    }),

  /**
   * Github OAuth Provider
   * @see https://next-auth.js.org/providers/github
   */
  env.GITHUB_CLIENT_ID &&
    env.GITHUB_CLIENT_SECRET &&
    GithubProvider({
      clientId: env.GITHUB_CLIENT_ID,
      clientSecret: env.GITHUB_CLIENT_SECRET,
    }),

  /**
   * Discord OAuth Provider
   * @see https://next-auth.js.org/providers/discord
   */
  env.DISCORD_CLIENT_ID &&
    env.DISCORD_CLIENT_SECRET &&
    DiscordProvider({
      clientId: env.DISCORD_CLIENT_ID,
      clientSecret: env.DISCORD_CLIENT_SECRET,
    }),

  /**
   * Google OAuth Provider
   * @see https://next-auth.js.org/providers/google
   */
  env.GOOGLE_CLIENT_ID &&
    env.GOOGLE_CLIENT_SECRET &&
    GoogleProvider({
      clientId: env.GOOGLE_CLIENT_ID,
      clientSecret: env.GOOGLE_CLIENT_SECRET,
    }),
].filter(Boolean) as Provider[];

export const authOptions: NextAuthOptions = {
  /**
   * @see https://next-auth.js.org/providers
   */
  providers,
  pages: {
    signIn: "/",
    error: "/",
    signOut: "/",
  },
  callbacks: {},
};
